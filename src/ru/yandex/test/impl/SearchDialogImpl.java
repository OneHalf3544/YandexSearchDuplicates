/*
 * SearchDialogImpl.java
 *
 * Created on 02.07.2011, 19:25:40
 */
package ru.yandex.test.impl;

import ru.yandex.test.SearchDialog;
import ru.yandex.test.SearchDoubles.Duplicate;
import ru.yandex.test.Vacancy;
import ru.yandex.test.VacancySource;

import javax.swing.*;
import java.awt.event.ActionListener;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author OneHalf
 */
public class SearchDialogImpl extends javax.swing.JFrame implements SearchDialog {

    /** Creates new form SearchDialogImpl */
    public SearchDialogImpl() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception ex) {
            Logger.getLogger(SearchDialogImpl.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfSearchQuery = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnReport = new javax.swing.JButton();
        pnlSites = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tfItemCount = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.PAGE_AXIS));

        jLabel1.setText("Что ищем?");
        jPanel1.add(jLabel1);

        tfSearchQuery.setPreferredSize(new java.awt.Dimension(120, 20));
        jPanel1.add(tfSearchQuery);

        btnSearch.setText("Найти");
        jPanel1.add(btnSearch);

        btnReport.setText("Отчет");
        jPanel1.add(btnReport);

        jPanel2.add(jPanel1);

        jLabel2.setText("Где ищем?");
        pnlSites.add(jLabel2);

        jPanel2.add(pnlSites);

        jLabel3.setText("Сколько ищем? (на каждый источник)");
        jPanel3.add(jLabel3);

        tfItemCount.setText("25");
        tfItemCount.setMinimumSize(new java.awt.Dimension(60, 20));
        tfItemCount.setPreferredSize(new java.awt.Dimension(60, 20));
        jPanel3.add(tfItemCount);

        jPanel2.add(jPanel3);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPanel pnlSites;
    private javax.swing.JTextField tfItemCount;
    private javax.swing.JTextField tfSearchQuery;
    // End of variables declaration//GEN-END:variables

    private Map<JCheckBox, VacancySource> checkBoxes = new HashMap<JCheckBox, VacancySource>();
    
    @Override
    public String getSearchString() {
        return tfSearchQuery.getText();
    }

    @Override
    public void addSearchListener(ActionListener listener) {
        btnSearch.addActionListener(listener);
    }

    @Override
    public void addReportListener(ActionListener listener) {
        btnReport.addActionListener(listener);
    }

    @Override
    public void setDuplicateVacancy(Set<Duplicate> duplicates) {
        StringBuilder sb = new StringBuilder();
        for (Duplicate duplicate : duplicates) {
            for (Vacancy vacancy : duplicate.getDuplicates()) {
                sb.append(vacancy.getVacancyName()).append(" ")
                        .append(vacancy.getVacancyUrl()).append("\n");
            }
            sb.append("\n");
        }
        
        jTextArea1.setText(sb.toString());
    }

    @Override
    public void setSiteParsers(Set<VacancySource> siteParsers) {
        for (JCheckBox checkBox : checkBoxes.keySet()) {
            pnlSites.remove(checkBox);
        }
        checkBoxes.clear();
        
        for (VacancySource siteParser : siteParsers) {
            final JCheckBox jCheckBox = new JCheckBox(siteParser.getSourceName(), true);
            pnlSites.add(jCheckBox);
            checkBoxes.put(jCheckBox, siteParser);
        }
    }

    @Override
    public Set<VacancySource> getVacancySources() {
        HashSet<VacancySource> result = new HashSet<VacancySource>();
        
        for (JCheckBox checkbox : checkBoxes.keySet()) {
            if (checkbox.isSelected()) {
                result.add(checkBoxes.get(checkbox));
            }
        }
        return result;
    }

    @Override
    public int getItemsCount() {
        return Integer.parseInt(tfItemCount.getText());
    }
}
